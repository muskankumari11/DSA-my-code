class Solution {
public:
    vector<string> subdomainVisits(vector<string>& cpdomains) {
        unordered_map<string,int>mpp;
        vector<string>res;
        int n = cpdomains.size();
        for(int i = 0; i < n; ++i)
        {   
            int j = cpdomains[i].size() - 1;
            string temp;
            int val = stoi(cpdomains[i]);
            while(cpdomains[i][j]!=' ')
            {
               if(cpdomains[i][j]=='.')
               {  
                 string c = temp;
                 reverse(c.begin(),c.end());
                 mpp[c] += val; 
               } 
               temp.push_back(cpdomains[i][j]);

               j--; 
            }
            reverse(temp.begin(),temp.end());

            mpp[temp] += val;
        }
        for(auto it : mpp) res.push_back(to_string(it.second) +" "+it.first);
        return res;
    }
};
