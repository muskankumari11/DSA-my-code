class Solution {
public:
    string fun(string s){
        unordered_map<char,int>m;
        int k=1;
        for(auto i:s){
            if(m.find(i)==m.end()){
                m[i]=k++;
            }
        }
        string ref="";
        for(auto i:s){
            ref+=to_string(m[i]+',');
        }
        return ref;
    }
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        string ref=fun(pattern);
        vector<string>result;
        for(auto str:words){
               if(fun(str)==ref){
                   result.push_back(str);
               }   
        }
        return result;
    }
};
